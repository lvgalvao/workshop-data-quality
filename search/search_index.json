{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>O esquema da minha tabela \u00e9 esse aqui</p> <p>             Bases: <code>BaseModel</code></p> <p>Classe que representa o schema de vendas.</p> <p>Parameters:</p> Name Type Description Default <code>email</code> <code>str</code> <p>Email do cliente.</p> required <code>data</code> <code>datetime</code> <p>Data da compra.</p> required <code>valor</code> <code>float</code> <p>Valor total da compra.</p> required <code>produto</code> <code>str</code> <p>Nome do produto.</p> required <code>quantidade</code> <code>int</code> <p>Quantidade do produto.</p> required <code>categoria</code> <code>str</code> <p>Categoria do produto.</p> required example <p>arquivo valido:</p> <pre><code>{\n\"email\": \"cliente@example.com\",\n\"data\": \"2023-10-01T00:00:00\",\n\"valor\": 150.0,\n\"produto\": \"cadeira\",\n\"quantidade\": 5,\n\"categoria\": \"categoria1\"\n}\n</code></pre> Source code in <code>src/models.py</code> <pre><code>class Vendas(BaseModel):\n\n    \"\"\"\n    Classe que representa o schema de vendas.\n\n    args:\n        email (str): Email do cliente.\n        data (datetime): Data da compra.\n        valor (float): Valor total da compra.\n        produto (str): Nome do produto.\n        quantidade (int): Quantidade do produto.\n        categoria (str): Categoria do produto.\n\n    example:\n        arquivo valido:\n\n        ```json\n        {\n        \"email\": \"cliente@example.com\",\n        \"data\": \"2023-10-01T00:00:00\",\n        \"valor\": 150.0,\n        \"produto\": \"cadeira\",\n        \"quantidade\": 5,\n        \"categoria\": \"categoria1\"\n        }\n        ```\n\n    \"\"\"\n\n    model_config = ConfigDict(extra='forbid')\n    email: EmailStr\n    data: datetime\n    valor: PositiveFloat\n    produto: Optional[str] = None\n    quantidade: PositiveInt\n    categoria: CategoriaEnum\n\n    @validator('categoria')\n    def categoria_deve_estar_no_enum(cls, error):\n        return error\n</code></pre>"}]}